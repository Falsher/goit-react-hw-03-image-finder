{"version":3,"sources":["components/image-folder/modal.js","components/image-folder/gallery.js","components/image-folder/image-info.js","components/image-folder/image-input.js","App.js","reportWebVitals.js","index.js"],"names":["modalRoot","document","querySelector","Modal","handleBackdropClick","event","currentTarget","target","props","closeModal","handleKeyDown","code","window","addEventListener","this","removeEventListener","createPortal","className","onClick","width","src","href","alt","Component","ImageGalleryItem","handleClick","openModal","dataset","largeimage","largeImageUrl","ImageInfo","state","image","loading","error","page","showModal","modalData","toggleModal","setState","hendlePageUp","console","log","prevProps","prevState","imageName","fetch","then","response","json","catch","finally","hits","map","hit","user","previewURL","largeImageURL","id","ImageInput","inputData","handleInputChange","value","toLowerCase","reset","handleSubmit","preventDefault","trim","onSubmit","toast","type","autocomplete","autofocus","placeholder","onChange","App","formSubmit","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.006d8570.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport './css/modal.css';\nconst modalRoot = document.querySelector('#modal-root');\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n  handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      this.props.closeModal();\n    }\n  };\n  handleKeyDown = event => {\n    if (event.code === 'Escape') {\n      this.props.closeModal();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Modal-backdrop \" onClick={this.handleBackdropClick}>\n        <div className=\"Modal-content\">\n          <img width=\"400\" src={this.props.href} alt={this.props.alt} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import { Component } from 'react';\n\nclass ImageGalleryItem extends Component {\n  handleClick = event => {\n    this.props.openModal(event.target.dataset.largeimage, this.props.alt);\n  };\n\n  render() {\n    return (\n      <>\n        <img\n          src={this.props.src}\n          alt={this.props.alt}\n          className=\"ImageGalleryItem-image\"\n          data-largeimage={this.props.largeImageUrl}\n          onClick={this.handleClick}\n        />\n      </>\n    );\n  }\n}\n\nexport default ImageGalleryItem;\n","import React, { Component } from 'react';\nimport Modal from './modal';\nimport Gallery from './gallery';\nimport './css/gallery.css';\nexport default class ImageInfo extends Component {\n  state = {\n    image: null,\n    loading: false,\n    error: null,\n    page: 1,\n    showModal: false,\n  };\n  modalData = {\n    src: '',\n    alt: '',\n  };\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.imageName !== this.props.imageName) {\n      this.setState({ loading: true });\n      fetch(\n        `https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${this.props.imageName}&page=${this.state.page}&per_page=12&key=21857111-8554c096d1798b5dae4546d72`,\n      )\n        .then(response => response.json())\n        .then(image => this.setState({ image }))\n        .catch(error => this.setState({ error }))\n        .finally(() => this.setState({ loading: false }));\n    }\n  }\n  toggleModal = () => {\n    this.setState(state => ({ showModal: !state.showModal }));\n  };\n  hendlePageUp = () => {\n    this.setState(state => ({ page: state.page + 1 }));\n    console.log(this.state.page);\n  };\n  openModal = (src, alt) => {\n    this.modalData.src = src;\n    this.modalData.alt = alt;\n    this.toggleModal();\n  };\n  render() {\n    const { loading, image, error } = this.state;\n\n    return (\n      <section>\n        <h1>ImageInfo </h1>\n        {error && <h1>Картинки {this.props.imageName} нет</h1>}\n        {loading && <div>loading...</div>}\n        {!this.props.imageName && <div>Введите название картинки</div>}\n        {image && (\n          <div>\n            <ul className=\"ImageGallery\">\n              {image.hits.map(hit => {\n                return (\n                  <li className=\"ImageGalleryItem\" key={hit.id}>\n                    <Gallery\n                      alt={hit.user}\n                      src={hit.previewURL}\n                      largeImageUrl={hit.largeImageURL}\n                      openModal={this.openModal}\n                    />\n                  </li>\n                );\n              })}\n\n              <div>\n                {this.state.showModal && (\n                  <Modal\n                    closeModal={this.toggleModal}\n                    href={this.modalData.src}\n                    alt={this.modalData.alt}\n                  />\n                )}\n              </div>\n            </ul>\n\n            <button className=\"loadBtn\" onClick={this.hendlePageUp}>\n              Load more\n            </button>\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\n\nclass ImageInput extends Component {\n  state = {\n    inputData: '',\n  };\n  handleInputChange = event => {\n    this.setState({ inputData: event.currentTarget.value.toLowerCase() });\n  };\n  reset = () => {\n    this.setState({ inputData: '' });\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.state.inputData.trim() === '') {\n      toast.error('Введите имя image!');\n      return;\n    }\n    this.props.onSubmit(this.state.inputData);\n    this.reset();\n  };\n  render() {\n    return (\n      <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autocomplete=\"off\"\n          autofocus\n          placeholder=\"Search images and photos\"\n          value={this.state.inputData}\n          onChange={this.handleInputChange}\n        />\n      </form>\n    );\n  }\n}\nexport default ImageInput;\n","import React, { Component } from 'react';\n\nimport { ToastContainer } from 'react-toastify';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport './components/image-folder/css/header.css';\nimport ImageInfo from './components/image-folder/image-info';\nimport InputImage from './components/image-folder/image-input';\n\nclass App extends Component {\n  state = {\n    imageName: [],\n  };\n  formSubmit = imageName => {\n    this.setState({ imageName });\n  };\n\n  render() {\n    return (\n      <div>\n        <header className=\"Searchbar\">\n          <InputImage onSubmit={this.formSubmit} />\n\n          <ToastContainer\n            position=\"top-center\"\n            autoClose={3000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n          />\n        </header>\n\n        <ImageInfo imageName={this.state.imageName} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}